package com.dxvalley.michudw.michudw.repository;

import com.dxvalley.michudw.michudw.model.Transaction;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.Date;
import java.util.List;

@Repository
public interface TransactionRepository extends JpaRepository<Transaction, Long> {


    @Query(nativeQuery = true, value =
            "WITH MVMT AS( SELECT BUSINESS_DATE AS BOOKING_DATE, CREDIT_ACCT_NO AS TXNACCOUNTS, TXN_REF_NO AS REFERENCE, (SELECT DEBIT_THEIR_REF FROM STAGE.EFZ_FUNDS_TRANSFER A WHERE A.REF_NO = F.TXN_REF_NO ) AS DESCRIPTION, NULL AS NARATIVE, CREDIT_VALUE_DATE AS VALUE_DATE, NULL AS DEBIT, CREDIT_LOCAL_AMOUNT AS CREDIT, DEBIT_ACCT_NO, CREDIT_ACCT_NO AS TOACCT, PAYMENT_DETAILS FROM TARGET.W_FUNDS_MVMT_TXN_F F WHERE BUSINESS_DATE BETWEEN :startDate AND :endDate AND CREDIT_ACCT_NO =:accountNumber UNION ALL SELECT BUSINESS_DATE AS BOOKING_DATE, DEBIT_ACCT_NO AS TXNACCOUNTS, TXN_REF_NO AS REFERENCE, (SELECT DEBIT_THEIR_REF FROM STAGE.EFZ_FUNDS_TRANSFER A WHERE A.REF_NO = F.TXN_REF_NO ) AS DESCRIPTION,  NULL AS NARATIVE, DEBIT_VALUE_DATE AS VALUE_DATE, CREDIT_LOCAL_AMOUNT AS DEBIT, NULL AS CREDIT, DEBIT_ACCT_NO, CREDIT_ACCT_NO AS TOACCT, PAYMENT_DETAILS FROM TARGET.W_FUNDS_MVMT_TXN_F F WHERE BUSINESS_DATE BETWEEN :startDate AND :endDate AND DEBIT_ACCT_NO = :accountNumber) SELECT    B.BOOKING_DATE,   REFERENCE, DESCRIPTION, NARATIVE, VALUE_DATE, DEBIT, CREDIT, DEBIT_ACCT_NO , TOACCT AS \"TO\", INITAL_Balance, PAYMENT_DETAILS AS \"Description\", CASE WHEN B.BOOKING_DATE = (SELECT MIN(D.BUSINESS_DATE) FROM TARGET.W_DATE_D D WHERE D.BUSINESS_DATE >= :startDate) THEN A1.LCY_CLOSING_BALANCE END AS BBF, CASE WHEN B.BOOKING_DATE = (SELECT MAX(D.BOOKING_DATE)  FROM MVMT D WHERE D.BOOKING_DATE <= :endDate)   THEN A2.LCY_CLOSING_BALANCE END AS Closing_Balance FROM MVMT B JOIN (SELECT A.business_date, A.CONTRACT_CODE, A.LCY_CLOSING_BALANCE FROM TARGET.VW_GL_BAL_CRB_F A WHERE LINE_NO BETWEEN 3704 AND 4199  AND A.CONTRACT_CODE = :accountNumber       AND A.business_date= (SELECT MAX(D.BUSINESS_DATE) FROM TARGET.W_DATE_D D WHERE D.BUSINESS_DATE < :startDate)  )A1 ON A1.CONTRACT_CODE  = B.TXNACCOUNTS  JOIN (SELECT A.business_date, A.CONTRACT_CODE, A.LCY_CLOSING_BALANCE      FROM TARGET.VW_GL_BAL_CRB_F A WHERE LINE_NO BETWEEN 3704 AND 4199 AND A.CONTRACT_CODE = :accountNumber       AND A.business_date= (SELECT MAX(D.BUSINESS_DATE) FROM TARGET.W_DATE_D D WHERE D.BUSINESS_DATE <= :endDate) )A2 ON A2.CONTRACT_CODE  = B.TXNACCOUNTS  LEFT JOIN (SELECT A.CONTRACT_CODE, AF.BUSINESS_DATE, AF.LCY_CLOSING_BALANCE AS INITAL_Balance      FROM TARGET.W_ACCOUNT_STATIC_D A JOIN TARGET.VW_GL_BAL_CRB_F AF ON A.CONTRACT_CODE = AF.CONTRACT_CODE       WHERE A.STATUS = 'Y' AND LINE_NO BETWEEN 3704 AND 4198 AND A.CONTRACT_CODE = :accountNumber AND      AF.BUSINESS_DATE  = (SELECT MIN(D.BUSINESS_DATE)  FROM TARGET.W_DATE_D D ))A3 ON A3.CONTRACT_CODE = B.TXNACCOUNTS ORDER BY BOOKING_DATE"
    )
    List<Transaction> findTransactions(
            @Param("startDate") String startDate,
            @Param("endDate") String endDate,
            @Param("accountNumber") String accountNumber);

}